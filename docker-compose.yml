version: '3.4'

volumes:
  data:

services:
  estetica.api:
    image: ${DOCKER_REGISTRY-}esteticaapi
    build:
      context: .
      dockerfile: src/Estetica.Api/Dockerfile
    environment:
      SERVIDOR : ${SERVIDOR}
      PORTA : ${PORTA}
      BANCO : ${BANCO}
      USUARIO : ${USUARIO}
      SENHA : ${SENHA}
      TIPOBANCO : ${TIPOBANCO}
    ports:
      - 5001:80
    expose:
      - 5001
    networks:
      rede_estetica:
        ipv4_address: 173.25.0.2
    restart: on-failure
    depends_on:
      - estetica_database

  #estetica_front:
  #  image: estetica_front
  #  container_name: estetica_front
  #  build:
  #    context: src/Estetica.Web
  #    dockerfile: ./Dockerfile
  #  ports:
  #    - 4201:80
  #  expose:
  #    - 4201
  #  restart: on-failure
  #  depends_on:
  #    - estetica.api
  #  networks:
  #    rede_estetica:
  #      ipv4_address: 173.25.0.4

  estetica_database:
    image: postgres:13
    ports:
      - 5402:5432
    container_name: estetica_database
    environment:
      POSTGRES_USER: ${USUARIO}
      POSTGRES_PASSWORD : ${SENHA}
      PGDATA: /data/postgres
    networks:
      rede_estetica:
        ipv4_address: 173.25.0.3
    volumes:
       - data:/var/lib/postgresql/data
       - type: tmpfs
         target: /dev/shm
    restart: on-failure

networks:
  rede_estetica:
    name: rede_estetica
    driver: bridge
    ipam:
     config:
       - subnet: 173.25.0.0/16
         gateway: 173.25.0.1